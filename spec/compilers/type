type Test(a) {
  X
  Y
  Z(Result(a, Number))
}

type Result(error, value) {
  Error(error)
  Ok(value)
  Other(error, value)
}

component Main {
  fun render : String {
    Test.X
    Result.Other("", "")
    Test.Z(Result.Error(""))
    ""
  }
}
--------------------------------------------------------------------------------
import {
  newVariant as B,
  variant as A
} from "./runtime.js";

export const
  C = A(1, `Result.Ok`),
  D = A(1, `Result.Error`),
  E = A(2, `Result.Other`),
  F = A(0, `Test.X`),
  G = A(0, `Test.Y`),
  H = A(1, `Test.Z`),
  I = () => {
    new F();
    B(E)(``, ``);
    B(H)(B(D)(``));
    return ``
  };
